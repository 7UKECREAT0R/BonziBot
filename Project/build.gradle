apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'java-library-distribution'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
    }
}
apply plugin: 'com.github.johnrengelman.shadow'

repositories {
    google()
    jcenter()
    mavenCentral()
    mavenLocal()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
	implementation 'net.dv8tion:JDA:4.2.0_214'
	implementation 'com.sedmelluq:lavaplayer:1.3.55'
	
	compile 'com.google.api-client:google-api-client:1.30.5'
	compile 'com.google.apis:google-api-services-youtube:v3-rev20200109-1.30.8'
	compile 'net.sourceforge.htmlunit:htmlunit:2.38.0'
	
	compile group: 'com.pi4j', name: 'pi4j-core', version: '1.2'
	compile group: 'com.github.jreddit', name: 'jreddit', version: '1.0.3'
	compile group: 'net.sf.sociaal', name: 'freetts', version: '1.2.2'
	compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	
    testImplementation 'junit:junit:4.12'
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'
	
jar {
	exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
	baseName = 'BonziBot'
	version = '1.0'
	manifest {
		attributes 'Main-Class': 'com.lukecreator.BonziBot.App'
	}
	from {
		configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
	}
}
task customFatJar(type: Jar) {
	manifest {
	    attributes 'Main-Class': 'com.lukecreator.BonziBot.App'
	}
	baseName = 'all-in-one-jar'
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}
